name: Latest Release

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Build and Create Release
    runs-on: ubuntu-24.10
    strategy:
      fail-fast: false
      matrix:
        goosarch:
          - linux/arm
          - linux/arm64
          - linux/amd64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Extract Build Info
        id: buildinfo
        run: |
          GOOSARCH="${{ matrix.goosarch }}"
          GOOS="${GOOSARCH%%/*}"
          GOARCH="${GOOSARCH##*/}"
          VERSION=$(grep -oP 'version\s*=\s*"\K[^"]+' ./src/main.go)
          BINARY_NAME="checkuser-${GOOS}-${GOARCH}"
          echo "goos=${GOOS}" >> "$GITHUB_OUTPUT"
          echo "goarch=${GOARCH}" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "binary=${BINARY_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build Binary
        env:
          GOOS: ${{ steps.buildinfo.outputs.goos }}
          GOARCH: ${{ steps.buildinfo.outputs.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o "${{ steps.buildinfo.outputs.binary }}" -v ./src

      - name: Generate Release Notes
        run: |
          git log "$(git describe --tags --abbrev=0 HEAD^)"..HEAD \
            --pretty='* %h %s (%an)' --no-merges > .github/RELEASE-TEMPLATE.md

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.buildinfo.outputs.version }}
          body_path: .github/RELEASE-TEMPLATE.md
          files: ${{ steps.buildinfo.outputs.binary }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
